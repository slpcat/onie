# ufiSpace S9600-28DX
# CPU Module: Intel Icelake-D


description="ufiSpace S9600-28DX"

# Default ONIE block device
install_device_platform()
{
    # Find desired storage devices

    # NVMe PCIe controllers #1
    for _device in /sys/block/nvme*/device; do
        link=`readlink -f $_device | grep "pci0000:90\/0000:90:02.0"`
        if [ -n "$link" ]; then
            _disk=`echo $_device | cut -f4 -d/`
            echo /dev/$_disk
            return 0
        fi
    done

    # NVMe PCIe controllers #2
    for _device in /sys/block/nvme*/device; do
        link=`readlink -f $_device | grep "pci0000:90\/0000:90:03.0"`
        if [ -n "$link" ]; then
            _disk=`echo $_device | cut -f4 -d/`
            echo /dev/$_disk
            return 0
        fi
    done

    # RAID controller - SATA0
    for _device in /sys/block/sd*/device; do
        link=`readlink -f $_device | grep "pci0000:00\/0000:00:11.0" | grep "ata1"`
        if [ -n "$link" ]; then
            _disk=`echo $_device | cut -f4 -d/`
            echo /dev/$_disk
            return 0
        fi
    done

    # RAID controller - SATA1
    for _device in /sys/block/sd*/device; do
        link=`readlink -f $_device | grep "pci0000:00\/0000:00:11.0" | grep "ata2"`
        if [ -n "$link" ]; then
            _disk=`echo $_device | cut -f4 -d/`
            echo /dev/$_disk
            return 0
        fi
    done

    # RAID 
    for _device in /sys/block/sd*/device; do
        link=`readlink -f $_device | grep "pci0000:00\/0000:00:11.0" | grep "ata"`
        if [ -n "$link" ]; then
            _disk=`echo $_device | cut -f4 -d/`
            echo /dev/$_disk
            return 0
        fi
    done

    # Other cases
    echo /dev/sda

    return 1
}

# Local Variables:
# mode: shell-script
# eval: (sh-set-shell "/bin/sh" t nil)
# End:
